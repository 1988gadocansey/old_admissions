// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TTU_CORE_ASP_ADMISSION_PORTAL.Data;

namespace TTU_CORE_ASP_ADMISSION_PORTAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210426102427_app1")]
    partial class app1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

            modelBuilder.Entity("ApplicantModelProgrammeModel", b =>
                {
                    b.Property<int>("ApplicantID")
                        .HasColumnType("integer");

                    b.Property<int>("ProgrammesId")
                        .HasColumnType("integer");

                    b.HasKey("ApplicantID", "ProgrammesId");

                    b.HasIndex("ProgrammesId");

                    b.ToTable("ApplicantModelProgrammeModel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.AcademicExperieceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int?>("ApplicantModelID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Grade")
                        .HasColumnType("text");

                    b.Property<string>("InstitutionAddress")
                        .HasColumnType("text");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("text");

                    b.Property<string>("ProgrammeStudied")
                        .HasColumnType("text");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantModelID");

                    b.ToTable("AcademicExperieceModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantIssueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<bool>("Age")
                        .HasColumnType("boolean");

                    b.Property<int>("ApplicantModelID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("FormCompletion")
                        .HasColumnType("boolean");

                    b.Property<string>("IssuesOne")
                        .HasColumnType("text");

                    b.Property<bool>("Picture")
                        .HasColumnType("boolean");

                    b.Property<bool>("Qualification")
                        .HasColumnType("boolean");

                    b.Property<bool>("Results")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantModelID");

                    b.ToTable("ApplicantIssueModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AdmissionType")
                        .HasColumnType("text");

                    b.Property<bool?>("Admitted")
                        .HasColumnType("boolean");

                    b.Property<int>("AdmittedBy")
                        .HasColumnType("integer");

                    b.Property<string>("Age")
                        .HasColumnType("text");

                    b.Property<string>("AltPhone")
                        .HasColumnType("text");

                    b.Property<int>("ApplicationNumber")
                        .HasColumnType("integer");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.Property<bool?>("Awaiting")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateAdmitted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Denomination")
                        .HasColumnType("text");

                    b.Property<bool?>("Disability")
                        .HasColumnType("boolean");

                    b.Property<string>("DisabilityType")
                        .HasColumnType("text");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("integer");

                    b.Property<bool?>("Elligible")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmergencyContact")
                        .HasColumnType("text");

                    b.Property<string>("EntryMode")
                        .HasColumnType("text");

                    b.Property<string>("ExternalHostel")
                        .HasColumnType("text");

                    b.Property<bool?>("FeePaying")
                        .HasColumnType("boolean");

                    b.Property<decimal>("FeesPaid")
                        .HasColumnType("numeric");

                    b.Property<int>("FirstChoiceId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstQualification")
                        .HasColumnType("text");

                    b.Property<string>("FormerSchool")
                        .HasColumnType("text");

                    b.Property<int?>("FormerSchoolNewId")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Grade")
                        .HasColumnType("integer");

                    b.Property<string>("GuardianName")
                        .HasColumnType("text");

                    b.Property<string>("GuardianOccupation")
                        .HasColumnType("text");

                    b.Property<string>("GuardianPhone")
                        .HasColumnType("text");

                    b.Property<string>("GuardianRelationship")
                        .HasColumnType("text");

                    b.Property<string>("HallAdmitted")
                        .HasColumnType("text");

                    b.Property<int?>("HallId")
                        .HasColumnType("integer");

                    b.Property<string>("Hometown")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("LastYearInSchool")
                        .HasColumnType("integer");

                    b.Property<bool?>("LetterPrinted")
                        .HasColumnType("boolean");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("NationalIDNo")
                        .HasColumnType("text");

                    b.Property<string>("NationalIDType")
                        .HasColumnType("text");

                    b.Property<int>("NationalityId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostGPRS")
                        .HasColumnType("text");

                    b.Property<string>("PreferedHall")
                        .HasColumnType("text");

                    b.Property<string>("PreviousName")
                        .HasColumnType("text");

                    b.Property<int?>("ProgrammeAdmittedId")
                        .HasColumnType("integer");

                    b.Property<string>("ProgrammeStudied")
                        .HasColumnType("text");

                    b.Property<string>("Referrals")
                        .HasColumnType("text");

                    b.Property<int?>("RegionId")
                        .HasColumnType("integer");

                    b.Property<int>("ReligionId")
                        .HasColumnType("integer");

                    b.Property<bool>("Reported")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ReportedInSchool")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ResidentialStatus")
                        .HasColumnType("boolean");

                    b.Property<string>("Results")
                        .HasColumnType("text");

                    b.Property<string>("RoomNo")
                        .HasColumnType("text");

                    b.Property<bool?>("SMSSent")
                        .HasColumnType("boolean");

                    b.Property<int>("SecondChoiceId")
                        .HasColumnType("integer");

                    b.Property<string>("SecondQualification")
                        .HasColumnType("text");

                    b.Property<string>("SectionAdmitted")
                        .HasColumnType("text");

                    b.Property<string>("SourceOfFinance")
                        .HasColumnType("text");

                    b.Property<bool?>("SponsorShip")
                        .HasColumnType("boolean");

                    b.Property<string>("SponsorShipCompany")
                        .HasColumnType("text");

                    b.Property<string>("SponsorShipCompanyContact")
                        .HasColumnType("text");

                    b.Property<string>("SponsorShipLocation")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("ThirdChoiceId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("YearOfAdmission")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("FormerSchoolNewId");

                    b.HasIndex("HallId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("RegionId");

                    b.HasIndex("ReligionId");

                    b.ToTable("ApplicantModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<bool>("Admitted")
                        .HasColumnType("boolean");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int>("Finalized")
                        .HasColumnType("integer");

                    b.Property<int>("FormCompleted")
                        .HasColumnType("integer");

                    b.Property<string>("FormNo")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int>("PictureUploaded")
                        .HasColumnType("integer");

                    b.Property<string>("Pin")
                        .HasColumnType("text");

                    b.Property<bool>("ResultUploaded")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<int>("Sold")
                        .HasColumnType("integer");

                    b.Property<string>("SoldBy")
                        .HasColumnType("text");

                    b.Property<int>("Started")
                        .HasColumnType("integer");

                    b.Property<string>("Teller")
                        .HasColumnType("text");

                    b.Property<string>("TellerPhone")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Year")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.BankModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Account")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BankModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.CountryModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("CountryModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.DenominationModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("DenominationModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.DepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("Faculty")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DepartmentModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.DistrictModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Region")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("DistrictModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.DocumentUploadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("Applicant")
                        .HasColumnType("integer");

                    b.Property<int?>("ApplicantModelID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantModelID");

                    b.ToTable("DocumentUploadModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ExamModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("CutOffPoint")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ExamModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.FacultyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FacultyModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.FormNoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("No")
                        .HasColumnType("integer");

                    b.Property<string>("Year")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FormNoModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.FormerSchoolModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Region")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FormerSchoolModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.GradeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("Exam")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GradeModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.HallModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("BankAcc")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HallModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ProgrammeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("Department")
                        .HasColumnType("integer");

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<string>("LevelAdmitted")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("Runing")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShowOnPortal")
                        .HasColumnType("boolean");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProgrammeModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.RegionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RegionModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ReligionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReligionModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.RequirementModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int?>("ApplicantModelID")
                        .HasColumnType("integer");

                    b.Property<bool>("Aprroved")
                        .HasColumnType("boolean");

                    b.Property<int>("Department")
                        .HasColumnType("integer");

                    b.Property<string>("RuleOne")
                        .HasColumnType("text");

                    b.Property<string>("RuleThree")
                        .HasColumnType("text");

                    b.Property<string>("RuleTwo")
                        .HasColumnType("text");

                    b.Property<string>("Year")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantModelID");

                    b.ToTable("RequirementModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ResultUploadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("Applicant")
                        .HasColumnType("integer");

                    b.Property<int>("ApplicantModelID")
                        .HasColumnType("integer");

                    b.Property<string>("Center")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExamType")
                        .HasColumnType("text");

                    b.Property<string>("Form")
                        .HasColumnType("text");

                    b.Property<int?>("GradeId")
                        .HasColumnType("integer");

                    b.Property<int>("GradeOld")
                        .HasColumnType("integer");

                    b.Property<string>("GradeValueOld")
                        .HasColumnType("text");

                    b.Property<string>("IndexNo")
                        .HasColumnType("text");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("text");

                    b.Property<string>("Month")
                        .HasColumnType("text");

                    b.Property<string>("OldSubject")
                        .HasColumnType("text");

                    b.Property<string>("Sitting")
                        .HasColumnType("text");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Year")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantModelID");

                    b.HasIndex("GradeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ResultUploadModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.SHSProgrammes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("SHSProgrammes");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.SMSModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int?>("ApplicantModelID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<int>("Recipient")
                        .HasColumnType("integer");

                    b.Property<int>("SentBy")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantModelID");

                    b.ToTable("SMSModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.SchoolModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Region")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SchoolModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.SubjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SubjectModel");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.WorkingExperienceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int?>("ApplicantModelID")
                        .HasColumnType("integer");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("text");

                    b.Property<string>("CompanyFrom")
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<string>("CompanyPhone")
                        .HasColumnType("text");

                    b.Property<string>("CompanyPosition")
                        .HasColumnType("text");

                    b.Property<string>("CompanyTo")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantModelID");

                    b.ToTable("WorkingExperienceModel");
                });

            modelBuilder.Entity("ApplicantModelProgrammeModel", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", null)
                        .WithMany()
                        .HasForeignKey("ApplicantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ProgrammeModel", null)
                        .WithMany()
                        .HasForeignKey("ProgrammesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.AcademicExperieceModel", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", null)
                        .WithMany("AcademicExperience")
                        .HasForeignKey("ApplicantModelID");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantIssueModel", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", null)
                        .WithMany("ApplicantIssueModel")
                        .HasForeignKey("ApplicantModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.DistrictModel", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.FormerSchoolModel", "FormerSchoolNew")
                        .WithMany()
                        .HasForeignKey("FormerSchoolNewId");

                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.HallModel", "Hall")
                        .WithMany()
                        .HasForeignKey("HallId");

                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.CountryModel", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.RegionModel", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ReligionModel", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("District");

                    b.Navigation("FormerSchoolNew");

                    b.Navigation("Hall");

                    b.Navigation("Nationality");

                    b.Navigation("Region");

                    b.Navigation("Religion");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.DocumentUploadModel", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", null)
                        .WithMany("DocumentUpload")
                        .HasForeignKey("ApplicantModelID");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.RequirementModel", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", null)
                        .WithMany("Requirement")
                        .HasForeignKey("ApplicantModelID");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ResultUploadModel", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", null)
                        .WithMany("ResultUploads")
                        .HasForeignKey("ApplicantModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.GradeModel", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.SubjectModel", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.Navigation("Grade");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.SMSModel", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", null)
                        .WithMany("Sms")
                        .HasForeignKey("ApplicantModelID");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.WorkingExperienceModel", b =>
                {
                    b.HasOne("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", null)
                        .WithMany("WorkingExperience")
                        .HasForeignKey("ApplicantModelID");
                });

            modelBuilder.Entity("TTU_CORE_ASP_ADMISSION_PORTAL.Models.ApplicantModel", b =>
                {
                    b.Navigation("AcademicExperience");

                    b.Navigation("ApplicantIssueModel");

                    b.Navigation("DocumentUpload");

                    b.Navigation("Requirement");

                    b.Navigation("ResultUploads");

                    b.Navigation("Sms");

                    b.Navigation("WorkingExperience");
                });
#pragma warning restore 612, 618
        }
    }
}
